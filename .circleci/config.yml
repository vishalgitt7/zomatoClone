version: 2.1

orbs:
  node: circleci/node@5
  github: circleci/github-cli@2.0.0

jobs:
  update-dependencies:
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json"}}
            - npm-cache-
      - run:
          name: Install Dependencies
          command: |
            if ! npm ci; then
              echo "npm ci failed, likely due to package-lock.json being out of sync. Running npm install..."
              npm install
            fi
      - run:
          name: Check and Update Dependencies
          command: |
            npm outdated || true
            npm update
            npm audit fix --force || echo "npm audit fix failed, continuing..."
            npm install
            git config --global user.email "vishalgitt7@users.noreply.github.com"
            git config --global user.name "Vishal Gitt"
            git add package.json package-lock.json
            git commit -m "[ci skip] chore: update dependencies and fix vulnerabilities" || echo "No dependency updates"
            git push origin main || echo "Push failed, likely no changes or permissions issue"
      - save_cache:
          key: npm-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json"}}
          paths:
            - ~/.npm
  test-node:
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json"}}
            - npm-cache-
      - node/install-packages:
          pkg-manager: npm
      - save_cache:
          key: npm-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json"}}
          paths:
            - ~/.npm
      - run:
          name: Run tests
          command: npm test -- --passWithNoTests
  build-node:
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json"}}
            - npm-cache-
      - node/install-packages:
          pkg-manager: npm
      - save_cache:
          key: npm-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json"}}
          paths:
            - ~/.npm
      - run:
          name: Build project
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  build-and-push-docker:
    docker:
      - image: cimg/base:2024.09
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker Image
          command: |
            docker build -t $DOCKERHUB_USERNAME/zomato_clone:latest .
      - run:
          name: Install Trivy
          command: |
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin
            trivy --version
      - run:
          name: Scan Docker Image with Trivy
          command: |
            mkdir -p ~/.cache/trivy
            trivy image --severity CRITICAL,HIGH --cache-dir ~/.cache/trivy --format json --output /home/circleci/project/trivy-report.json $DOCKERHUB_USERNAME/zomato_clone:latest 2> /home/circleci/project/trivy-error.log
      - store_artifacts:
          path: /home/circleci/project/trivy-report.json
          destination: trivy-report
      - store_artifacts:
          path: /home/circleci/project/trivy-error.log
          destination: trivy-error
      - run:
          name: Install Docker Scout
          command: |
            curl -sSfL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sudo sh -s -- -b /usr/local/bin
            docker-scout version
      - run:
          name: Login to Docker Hub for Scout
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Scan Docker Image with Docker Scout
          command: |
            docker-scout cves $DOCKERHUB_USERNAME/zomato_clone:latest --only-severity critical,high > /home/circleci/project/scout-report.txt 2> /home/circleci/project/scout-error.log
      - store_artifacts:
          path: /home/circleci/project/scout-report.txt
          destination: scout-report
      - store_artifacts:
          path: /home/circleci/project/scout-error.log
          destination: scout-error
      - run:
          name: Push Docker Image
          command: |
            docker push $DOCKERHUB_USERNAME/zomato_clone:latest

workflows:
  build-and-test:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
      - build-and-push-docker:
          requires:
            - build-node
  update-dependencies-weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 0" # Run every Sunday at midnight UTC
          filters:
            branches:
              only:
                - main
    jobs:
      - update-dependencies
