version: 2.1

orbs:
  node: circleci/node@5.0.2  

jobs:
  test-node:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-key: "node-modules-{{ checksum 'package-lock.json' }}-v2"
          pkg-manager: npm
      - run:
          name: Security Audit
          command: npm audit --production --audit-level=high
      - run:
          name: Run Tests with Coverage
          command: npm test -- --passWithNoTests --coverage
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage
          destination: coverage-report

  build-node:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Update npm
          command: sudo npm install -g npm@latest
      - node/install-packages:
          pkg-manager: npm
          args: --force
      - run:
          name: Fix Vulnerabilities
          command: npm audit fix --force || true
      - run:
          name: Update Dependencies
          command: npm update --save
      - run:
          name: Build Project
          command: npm run build
 
  build-and-push-docker:
    docker:
      - image: cimg/base:2024.09
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10
          docker_layer_caching: true
      
      # Build with security flags
      - run:
          name: Build Secure Image
          command: |
            docker build \
              --pull \
              --no-cache \
              --build-arg NODE_ENV=production \
              -t $DOCKERHUB_USERNAME/zomato_clone:latest \
              -t $DOCKERHUB_USERNAME/zomato_clone:$CIRCLE_SHA1 .
      
      - run:
          name: Install Trivy
          command: |
            # Install Trivy using the official installer script
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin
            # Verify Trivy installation
            trivy --version  
      - run:
          name: Scan Docker Image with Trivy
          command: |
            # Create a cache directory for Trivy to speed up scans
            mkdir -p ~/.cache/trivy
            # Scan the image, fail on CRITICAL or HIGH vulnerabilities
            trivy image --severity CRITICAL,HIGH,MEDIUM,LOW \
              --cache-dir ~/.cache/trivy --format json \
              --output /home/circleci/project/trivy-report.json \
              $DOCKERHUB_USERNAME/zomato_clone:latest 2> /home/circleci/project/trivy-error.log
      - store_artifacts:
          path: /home/circleci/project/trivy-report.json
          destination: trivy-report
      - store_artifacts:
          path: /home/circleci/project/trivy-error.log
          destination: trivy-error
      - run:
          name: Install Docker Scout
          command: |
            # Install Docker Scout CLI
            curl -sSfL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sudo sh -s -- -b /usr/local/bin
            # Verify Docker Scout installation
            docker-scout version
      - run:
          name: Login to Docker Hub for Scout
          command: |
            # Log in to Docker Hub to allow Scout to analyze the image
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Scan Docker Image with Docker Scout
          command: |
            # Scan the image, fail on CRITICAL or HIGH vulnerabilities
            docker-scout cves $DOCKERHUB_USERNAME/zomato_clone:latest --only-severity medium > /home/circleci/project/scout-report.txt 2> /home/circleci/project/scout-error.log
      - store_artifacts:
          path: /home/circleci/project/scout-report.txt
          destination: scout-report
      - store_artifacts:
          path: /home/circleci/project/scout-error.log
          destination: scout-error
      - run:
          name: Push Docker Image
          command: |
            # Push only if scans pass
            docker push $DOCKERHUB_USERNAME/zomato_clone:latest
workflows:
  main:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
      - build-and-push-docker:
          requires:
            - build-node
      - build-and-push-docker:
          context: docker-creds
          requires:
            - test-node